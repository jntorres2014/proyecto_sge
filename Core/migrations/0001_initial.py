# Generated by Django 4.2.8 on 2024-06-06 13:54

import Core.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnioPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(error_messages={'blank': 'El codigo es obligatorio'}, help_text='Ej: ', max_length=50)),
                ('descripcion', models.CharField(help_text='nivel', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Ciclo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anioCalendario', models.CharField(help_text='Ej: 2024', max_length=4, unique=True)),
                ('fechaInicio', models.DateField(default=django.utils.timezone.now, help_text='Ej: 16/02/2024')),
                ('fechaFin', models.DateField(help_text='Ej: 28/11/2024')),
                ('esActual', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(choices=[('1ra', 'Primera'), ('2da', 'Segunda'), ('3ra', 'Tercera'), ('4ta', 'Cuarta'), ('5ta', 'Quinta')], default='1ra', max_length=50)),
                ('descripcion', models.CharField(max_length=50)),
                ('anio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.anioplan')),
                ('ciclo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='divisiones', to='Core.ciclo')),
            ],
        ),
        migrations.CreateModel(
            name='Localidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigoPostal', models.CharField(error_messages={'blank': 'El Codigo Postal  es obligatorio', 'max_length': 'El Codigo Postal puede tener a lo sumo 5 caracteres', 'unique': 'El Codigo Postal ingresado ya existe'}, help_text='Ej: 9100', max_length=5)),
                ('nombre', models.CharField(error_messages={'blank': 'El nombre es obligatorio', 'max_length': 'El nombre puede tener a lo sumo 70 caracteres'}, help_text='Ej:Trelew ', max_length=70, validators=[django.core.validators.RegexValidator(regex='^[0-9a-zA-Z-_ .]{3,100}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(error_messages={'blank': 'El nombre es obligatorio', 'max_length': 'El nombre puede tener a lo sumo 50 caracteres'}, help_text='Ej: Juan', max_length=50, validators=[django.core.validators.RegexValidator(regex='^[0-9a-zA-Z-_ .]{3,100}$')])),
                ('apellido', models.CharField(error_messages={'blank': 'El apéllido es obligatorio', 'max_length': 'El apellido puede tener a lo sumo 50 caracteres'}, help_text='Ej: Perez', max_length=50, validators=[django.core.validators.RegexValidator(regex='^[0-9a-zA-Z-_ .]{3,100}$')])),
                ('dni', models.CharField(error_messages={'blank': 'El dni es obligatorio', 'max_length': 'El dni puede tener a lo sumo 11 caracteres', 'unique': 'El dni ingresado ya existe'}, help_text='Ej: 12345678', max_length=11, unique=True)),
                ('direccion', models.CharField(error_messages={'blank': 'La direccion es obligatoria'}, help_text='Ej: Calle falsa 123', max_length=100)),
                ('email', models.EmailField(blank=True, error_messages={'unique': 'El email no esta disponible'}, help_text='Ej: asd@asd.com', max_length=254, null=True, unique=True)),
                ('telefono', models.CharField(blank=True, error_messages={'max_length': 'El telefono puede tener a lo sumo 10 caracteres'}, help_text='Ej: 0123456789 ', max_length=10, null=True, validators=[django.core.validators.RegexValidator(regex='^[0-9]{1,12}$')])),
                ('localidad', models.ForeignKey(error_messages={}, help_text='Ej: Trelew', on_delete=django.db.models.deletion.CASCADE, to='Core.localidad')),
            ],
        ),
        migrations.CreateModel(
            name='PlanDeEstudios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(error_messages={'blank': 'El nombre es obligatorio'}, help_text='Ej: 123456', max_length=20, unique=True)),
                ('anio', models.CharField(default=1, error_messages={'blank': 'el anio es obligatorio'}, help_text='Ej: 2024', max_length=4, null=True)),
                ('orientacion', models.CharField(error_messages={'blank': 'la orientacion es obligatoria'}, help_text='Ej: Profesorado de educacion primaria', max_length=50)),
                ('nivel', models.CharField(error_messages={'blank': 'El nivel es obligatorio'}, help_text='Ej: Primario', max_length=50)),
                ('descripcion', models.CharField(blank=True, help_text='Ej: descripcion del plan de estudios', max_length=50)),
                ('esActual', models.BooleanField(default=True)),
                ('implementado', models.BooleanField(default=False)),
                ('cantidadAnios', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(default='Docente', max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('persona_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Core.persona')),
                ('tituloHabilitante', models.CharField(max_length=50)),
                ('rol', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='Core.rol')),
            ],
            bases=('Core.persona',),
        ),
        migrations.CreateModel(
            name='Preceptor',
            fields=[
                ('persona_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Core.persona')),
            ],
            bases=('Core.persona',),
        ),
        migrations.CreateModel(
            name='Instancia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Ej: Nota Final', max_length=50)),
                ('disponible', models.BooleanField(default=False)),
                ('fecha_inicio', models.DateField(default=django.utils.timezone.now, help_text='Ej: 16/02/2024')),
                ('fecha_fin', models.DateField(help_text='Ej: 16/02/2024')),
                ('ciclo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.ciclo')),
            ],
        ),
        migrations.CreateModel(
            name='Horario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_modulo', models.PositiveSmallIntegerField(default=1)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='Core.division')),
                ('docente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.docente')),
            ],
            options={
                'unique_together': {('division',)},
            },
        ),
        migrations.CreateModel(
            name='EspacioCurricular',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Ej: MAT-035', max_length=50, unique=True)),
                ('cantidadModulos', models.PositiveIntegerField(help_text='Ej: 5')),
                ('nombre', models.CharField(help_text='Ej: Matematica', max_length=50)),
                ('contenido', models.CharField(help_text='Ej: Sumas y restas basicas', max_length=50)),
                ('anio', models.ForeignKey(help_text='Ej: Elija un año del plan', on_delete=django.db.models.deletion.CASCADE, to='Core.anioplan')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.plandeestudios')),
            ],
            options={
                'unique_together': {('anio', 'codigo')},
            },
        ),
        migrations.AddField(
            model_name='ciclo',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.plandeestudios'),
        ),
        migrations.CreateModel(
            name='Aula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aulas', to='Core.division')),
            ],
            options={
                'db_table': 'Aula',
            },
        ),
        migrations.AddField(
            model_name='anioplan',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anios', to='Core.plandeestudios'),
        ),
        migrations.CreateModel(
            name='InscripcionDocente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now, help_text='Ej: 16/02/2024')),
                ('anio', models.ForeignKey(help_text='Ej: 1,año', on_delete=django.db.models.deletion.CASCADE, to='Core.anioplan')),
                ('ciclo', models.ForeignKey(help_text='Ej: Actual', null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.ciclo')),
                ('docente', models.ForeignKey(help_text='Ej: Juan Perez', null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.docente')),
            ],
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('persona_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Core.persona')),
                ('legajo', models.CharField(help_text='Ej: asd123', max_length=50, unique=True)),
                ('fechaInscripcion', models.DateField(default=django.utils.timezone.now, validators=[Core.models.Estudiante.dia_futuro])),
                ('aulas', models.ManyToManyField(blank=True, related_name='estudiantes_en_aula', to='Core.aula')),
            ],
            bases=('Core.persona',),
        ),
        migrations.AddField(
            model_name='division',
            name='alumnos',
            field=models.ManyToManyField(to='Core.estudiante'),
        ),
        migrations.CreateModel(
            name='Calificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.PositiveIntegerField(choices=[(1, 'final'), (2, 'parcial')])),
                ('nota', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('ciclo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.ciclo')),
                ('espacioCurricular', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='espacioCurricular', to='Core.espaciocurricular')),
                ('instancia', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='docente', to='Core.instancia')),
                ('docente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='docente', to='Core.docente')),
                ('estudiante', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.estudiante')),
            ],
        ),
        migrations.AddField(
            model_name='aula',
            name='estudiantes',
            field=models.ManyToManyField(blank=True, related_name='estudiantes', to='Core.estudiante'),
        ),
        migrations.AddField(
            model_name='anioplan',
            name='inscripciones',
            field=models.ManyToManyField(to='Core.estudiante'),
        ),
        migrations.CreateModel(
            name='Inscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now, help_text='Ej: 16/02/2024')),
                ('anio', models.ForeignKey(help_text='Ej: 1,año', on_delete=django.db.models.deletion.CASCADE, to='Core.anioplan')),
                ('ciclo', models.ForeignKey(help_text='Ej: Actual', null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.ciclo')),
                ('estudiante', models.ForeignKey(help_text='Ej: Juan Perez', null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.estudiante')),
            ],
            options={
                'unique_together': {('estudiante', 'ciclo', 'anio')},
            },
        ),
        migrations.CreateModel(
            name='Detalle_Horario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.CharField(help_text='Lunes', max_length=10)),
                ('hora', models.CharField(help_text='Ej: Modulo 1', max_length=10)),
                ('espacioCurricular', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='Core.espaciocurricular')),
                ('horario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.horario')),
                ('docente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.docente')),
            ],
            options={
                'unique_together': {('horario', 'espacioCurricular', 'dia', 'hora')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='anioplan',
            unique_together={('codigo', 'plan')},
        ),
    ]
