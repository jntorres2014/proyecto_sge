# Generated by Django 4.1.4 on 2022-12-28 20:29

import Core.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnioPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(error_messages={'blank': 'El codigo es obligatorio'}, help_text='codigo', max_length=20)),
                ('descripcion', models.CharField(help_text='nivel', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Localidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CodigoPosta', models.CharField(error_messages={'blank': 'El Codigo Postal  es obligatorio', 'max_length': 'El Codigo Postal puede tener a lo sumo 4 caracteres', 'unique': 'El Codigo Postal ingresado ya existe'}, help_text='cp', max_length=4, unique=True)),
                ('NombreLocalidad', models.CharField(error_messages={'blank': 'El nombre es obligatorio', 'max_length': 'El nombre puede tener a lo sumo 70 caracteres'}, help_text='Nombre Localidad ', max_length=70, validators=[django.core.validators.RegexValidator(regex='^[0-9a-zA-Z-_ .]{3,100}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nombre', models.CharField(error_messages={'blank': 'El nombre es obligatorio', 'max_length': 'El nombre puede tener a lo sumo 50 caracteres'}, help_text='Nombre', max_length=50, validators=[django.core.validators.RegexValidator(regex='^[0-9a-zA-Z-_ .]{3,100}$')])),
                ('Apellido', models.CharField(error_messages={'blank': 'El apéllido es obligatorio', 'max_length': 'El apellido puede tener a lo sumo 50 caracteres'}, help_text='Apellido', max_length=50, validators=[django.core.validators.RegexValidator(regex='^[0-9a-zA-Z-_ .]{3,100}$')])),
                ('Dni', models.CharField(error_messages={'blank': 'El dni es obligatorio', 'max_length': 'El dni puede tener a lo sumo 11 caracteres', 'unique': 'El dni ingresado ya existe'}, help_text='ingrese DNI', max_length=11, unique=True)),
                ('Direccion', models.CharField(error_messages={'blank': 'El dni es obligatorio', 'max_length': 'El dni puede tener a lo sumo 11 caracteres', 'unique': 'El dni ingresado ya existe'}, help_text='Direccion', max_length=11, unique=True)),
                ('Email', models.EmailField(blank=True, error_messages={'unique': 'Otra persona tiene ese email'}, help_text='Ingrese email valido', max_length=254, null=True, unique=True)),
                ('Telefono', models.CharField(blank=True, error_messages={'max_length': 'El telefono puede tener a lo sumo 7 caracteres'}, help_text='Telefono ', max_length=7, null=True, validators=[django.core.validators.RegexValidator(regex='^[0-9]{1,12}$')])),
                ('Localidad', models.ForeignKey(error_messages={}, help_text='Ingrese Localidad', on_delete=django.db.models.deletion.CASCADE, to='Core.localidad')),
            ],
        ),
        migrations.CreateModel(
            name='PlanDeEstudios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(error_messages={'blank': 'El nombre es obligatorio'}, help_text='codigo plan estudio', max_length=7, unique=True)),
                ('anio', models.CharField(default=1, error_messages={'blank': 'el anio es obligatorio'}, help_text='año actual del plan de estudio', max_length=4, null=True)),
                ('orientacion', models.CharField(error_messages={'blank': 'la orientacion es obligatoria'}, help_text='orientacion del plan de estudio', max_length=20)),
                ('nivel', models.CharField(error_messages={'blank': 'El nivel es obligatorio'}, help_text='nivel ', max_length=20)),
                ('descripcion', models.CharField(blank=True, help_text='descripcion', max_length=50)),
                ('cantidadAnios', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('persona_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Core.persona')),
                ('tituloHabilitante', models.CharField(max_length=50)),
            ],
            bases=('Core.persona',),
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('persona_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Core.persona')),
                ('legajo', models.CharField(max_length=50, unique=True)),
                ('fechaInscripcion', models.DateField(validators=[Core.models.Estudiante.dia_futuro])),
            ],
            bases=('Core.persona',),
        ),
        migrations.CreateModel(
            name='Preceptor',
            fields=[
                ('persona_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Core.persona')),
            ],
            bases=('Core.persona',),
        ),
        migrations.CreateModel(
            name='EspacioCurricular',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50)),
                ('cantidadModulos', models.PositiveIntegerField()),
                ('nombre', models.CharField(max_length=50)),
                ('contenido', models.CharField(max_length=50)),
                ('anio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.anioplan')),
            ],
            options={
                'unique_together': {('anio', 'codigo')},
            },
        ),
        migrations.AddField(
            model_name='anioplan',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anios', to='Core.plandeestudios'),
        ),
        migrations.CreateModel(
            name='Calificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.PositiveIntegerField(choices=[(1, 'final'), (2, 'parcial')])),
                ('nota', models.PositiveSmallIntegerField()),
                ('espacioCurricular', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='espacioCurricular', to='Core.espaciocurricular')),
                ('docente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='docente', to='Core.docente')),
                ('estudiante', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.estudiante')),
            ],
        ),
        migrations.AddField(
            model_name='anioplan',
            name='inscripciones',
            field=models.ManyToManyField(to='Core.estudiante'),
        ),
        migrations.AlterUniqueTogether(
            name='anioplan',
            unique_together={('codigo', 'plan')},
        ),
    ]
